<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>page</title>
    <link href="/2024/01/19/page/"/>
    <url>/2024/01/19/page/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用hexo与fluid优美的写一个自己的blog</title>
    <link href="/2024/01/19/%E4%BD%BF%E7%94%A8hexo%E4%B8%8Efluid%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84blog/"/>
    <url>/2024/01/19/%E4%BD%BF%E7%94%A8hexo%E4%B8%8Efluid%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84blog/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p><strong>注意：</strong></p><p>本文文参考 hexo 与 fluid 的官方文档</p><p>具体内容请参考以下链接:</p><p><a href="https://hexo.io/zh-cn/docs/">hexo 官方文档</a></p><p><a href="https://fluid-dev.github.io/hexo-fluid-docs/start/">fluid 官方文档</a></p>          </div><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><p>Hexo是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。即把用户的markdown文件，按照指定的主题解析成静态网页。</p><h3 id="1-1安装hexo"><a href="#1-1安装hexo" class="headerlink" title="1.1安装hexo"></a>1.1安装hexo</h3><div class="note note-warning">            <p>注意提前搭建 <strong>node.js</strong> 环境</p><p>可使用</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> -v<br></code></pre></td></tr></table></figure><p>检测 <strong>node.js</strong> 环境是否配置完成</p>          </div><p>可使用 <strong>npm</strong> 进行安装 <strong>hexo</strong></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><h3 id="1-2初始化blog"><a href="#1-2初始化blog" class="headerlink" title="1.2初始化blog"></a>1.2初始化blog</h3><p>在自己喜欢的文件夹中运行</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">hexo init <span class="hljs-variable">&lt;folder&gt;</span>      <span class="hljs-comment"># 使用hexo初始化blog根目录，相当于新建文件夹</span><br>cd <span class="hljs-variable">&lt;folder&gt;</span>             <span class="hljs-comment"># 进入&lt;folder&gt;文件夹中</span><br>npm install             <span class="hljs-comment"># 安装npm依赖库</span><br></code></pre></td></tr></table></figure><p>完成上述命令后，Hexo就会自动在站点根目录中生成一系列用于生成博客的文件，再输入以下命令，就可以在本地浏览博客：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo g   # 生成博客，等同于 hexo <span class="hljs-keyword">generate</span><br>hexo s   # 本地预览，等同于 hexo server<br></code></pre></td></tr></table></figure><p>在浏览器中访问<code>http://localhost:4000</code>就可本地访问自己的blog</p><p>此时<code>folder</code>中的文件目录为这样</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-string">|-- _config.yml</span><br><span class="hljs-string">|-- node_modules</span><br><span class="hljs-string">|-- package-lock.json</span><br><span class="hljs-string">|-- package.json</span><br><span class="hljs-string">|-- scaffolds</span><br><span class="hljs-string">|-- source</span><br><span class="hljs-string">|-- themes</span><br><span class="hljs-string">|-- public</span><br><span class="hljs-string">|-- db.json</span><br></code></pre></td></tr></table></figure><div class="note note-info">            <p>若在<code>source</code>新写一篇文章，请运行<code>hexo clean</code>以清楚缓存</p>          </div><h3 id="2-1-将本地博客部署到GitHubPages"><a href="#2-1-将本地博客部署到GitHubPages" class="headerlink" title="2.1 将本地博客部署到GitHubPages"></a>2.1 将本地博客部署到GitHubPages</h3><p>最直接的方式使用git将本地博客文件夹关联到GitHub的远程仓库，并且把本地文件push到对应的仓库中。hexo提供了一种更为简洁的方式，只需要在<code>_config.yml</code>文件中进行配置并在命令行中输入相应命令就可以将本地博客发布到GitHubPages上。 首先，打开<code>_config.yml</code>文件，在deployment配置项下设置如下参数：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">    type:</span> git<br><span class="hljs-symbol">    repo:</span> git@github.com:你GitHub的用户名/你GitHub的用户名.github.io.git<br><span class="hljs-symbol">    branch:</span> master<br></code></pre></td></tr></table></figure><p>然后，安装以下插件：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> hexo-deployer-git -save<br></code></pre></td></tr></table></figure><p>最后运行</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> d     <span class="hljs-comment">#相当于hexo deploy</span><br></code></pre></td></tr></table></figure><p>此时，在浏览器中输入<code>github用户名.github .io</code>，就可以在互联网上看到本地的博客了</p><h2 id="fluid"><a href="#fluid" class="headerlink" title="fluid"></a>fluid</h2><p>初看<strong>hexo</strong>自带的主题真的不怎么样，但是<strong>hexo</strong>可以使用大量的第三方主题。在这里我使用的就是<strong>fluid</strong>为主题</p><h3 id="3-1安装fliud"><a href="#3-1安装fliud" class="headerlink" title="3.1安装fliud"></a>3.1安装fliud</h3><p>官方提供了两种安装fluid的方式</p><h4 id="使用npm"><a href="#使用npm" class="headerlink" title="使用npm"></a>使用<strong>npm</strong></h4><p>在控制台中输入</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save hexo-theme-fluid</span><br></code></pre></td></tr></table></figure><h4 id="直接下载"><a href="#直接下载" class="headerlink" title="直接下载"></a>直接下载</h4><p>直接下载<a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">最新的release版本</a>，解压到themes目录，并将解压出来的文件夹改名为<code>fluid </code></p><h3 id="3-2指定主题"><a href="#3-2指定主题" class="headerlink" title="3.2指定主题"></a>3.2指定主题</h3><p>如下修改 Hexo 博客目录中的 <code>_config.yml</code></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> fluid     <span class="hljs-meta"># 指定主题</span><br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN  <span class="hljs-meta"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure><h3 id="3-3创建关于页"><a href="#3-3创建关于页" class="headerlink" title="3.3创建关于页"></a>3.3创建关于页</h3><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about<br></code></pre></td></tr></table></figure><p>创建成功后修改 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写关于页的正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><div class="note note-warning">            <p><span class="label label-warning"><strong>WARNING</strong></span></p><p>layout: about 必须存在，并且不能修改成其他值，否则不会显示头像等样式。</p>          </div><h3 id="3-4更新主题"><a href="#3-4更新主题" class="headerlink" title="3.4更新主题"></a>3.4更新主题</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><div class="note note-info">            <p>适用于npm安装的用户</p>          </div><p>在博客目录下执行命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">npm <span class="hljs-keyword">update</span> <span class="hljs-comment">--save hexo-theme-fluid</span><br></code></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><div class="note note-info">            <p>适用于通过 Release 压缩包安装主题，且没有自行修改任何代码的情况。</p>          </div><ol><li>先将原文件夹重命名为别的名称，例如 fluid-bkp，用于升级失败进行回退；</li><li>按照安装步骤，重新下载 <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">release</a>并解压重命名为 <code>fluid</code>；</li><li>如果某些配置发生了变化（改名或弃用），release 的说明里会特别提示，同步修改原配置文件即可.</li></ol><h4 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h4><div class="note note-info">            <p>适用于自定义了一些代码，或想体验其他分支的情况，以 dev 分支为例。</p>          </div><ol><li>确定自己的 fluid 目录已经开启 git，并且所有改动都已 commit；</li><li>把 fluid 仓库的 develop 分支拉取到自己当前的分支上（也可新建一个分支再拉取）：<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git pull https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/fluid-dev/</span>hexo-theme-fluid.git develop<br></code></pre></td></tr></table></figure></li><li>解决代码冲突，保留自己修改的部分（如何解决冲突可自行搜索）。</li></ol>]]></content>
    
    
    <categories>
      
      <category>网页</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blog</tag>
      
      <tag>网页</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
